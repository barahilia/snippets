# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# History: no duplicate lines, append mode
HISTCONTROL=ignoreboth
HISTSIZE=1000
HISTFILESIZE=2000
shopt -s histappend

# Update LINES and COLUMNS after each command
shopt -s checkwinsize

# Make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"


# Set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

if [ "$color_prompt" = yes ]; then
    PS1='\[\033[01;32m\]\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='\u@\h:\w\$ '
fi
unset color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# Enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    eval "$(dircolors -b)"
fi

# Alias definitions.
if [ -f ~/.aliases ]; then
    . ~/.aliases
fi
if [ -f ~/.aliases.local ]; then
    . ~/.aliases.local
fi

# Enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# Editor and language
export VISUAL=vim
LANG=en_US.UTF-8
LC_ALL=en_US.UTF-8

# Python - no cache files
export PYTHONDONTWRITEBYTECODE=1

# Less to ignore case in searches
export LESS="i"

# Setup fasd
if [ -x ~/bin/fasd ]; then
    eval "$(~/bin/fasd --init auto)"
fi

# Setup and config fzf
export FZF_DEFAULT_COMMAND='rg --files'
export FZF_DEFAULT_OPTS='-m --height 50% --border'
export FZF_CTRL_T_COMMAND='rg --files'
export FZF_CTRL_T_OPTS="--preview '\
    bat --style=numbers --color=always --line-range :50 {}'"

source ~/bin/fzf-etc/key-bindings.bash
source ~/bin/fzf-etc/completion.bash

# Convenience shortcut to visually choose a git branch
_git_branch() {
    git branch -a | fzf | sed 's/^* //'
}
bind -m vi-insert '"\e\C-e": shell-expand-line'
bind -m vi-insert '"\er": redraw-current-line'
bind -m vi-insert '"\C-gb": "$(_git_branch)\e\C-e\er"'

# Config bat
export BAT_THEME="OneHalfDark"
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
